name: Build UI

on:
  workflow_call:
    inputs:
      aws_region:
        required: true
        type: string
      environment:
        required: true
        type: string
      target:
        required: true
        type: string
      repository:
        required: true
        type: string
      branch:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      project_dir:
        required: true
        type: string 
      tag_env:
        required: true
        type: string 

    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      submodule_ssh_key:
        required: true
      ecr_repository:
        required: true
      envs:
        required: true


jobs:
  build:
    name: Pull Repository & Build
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    steps:
    - uses: actions/checkout@v2

    - name: Set tag
      id: vars
      run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
    
    - name: Checkout submodules
      uses: actions/checkout@v2 
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.branch }}
        path: ${{ inputs.project_dir }}
        ssh-key: ${{ secrets.submodule_ssh_key }}
        submodules: recursive

    # - run: git describe --tags > ${{ inputs.project_dir }}/project/version
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
        aws-region: ${{ inputs.aws_region }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        TAG_LATEST: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ecr_repository }}:${{ inputs.tag_env }}
        TAG_VERSION: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ecr_repository }}:${{ steps.vars.outputs.tag}}

      run: |
        docker build -f ${{ inputs.dockerfile }} -t $TAG_LATEST -t $TAG_VERSION --target ${{ inputs.target }} . \
        --build-arg ENVS=${{ secrets.envs }}
        
        docker push $TAG_LATEST
        docker push $TAG_VERSION
        echo "::set-output name=image::$TAG_VERSION"